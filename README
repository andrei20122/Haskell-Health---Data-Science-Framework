# Haskell Health - Data Science Framework

The goal of the project is to create a data science analysis framework similar to **pandas** in Haskell, designed for analyzing fitness data such as step counts, physical activities, and sleep tracking.

## Core Features

- **CSV Parsing and Table Management**: 
  - Read, manipulate, and write CSV-like tables using Haskell's functional programming features.
  
- **Data Analysis**: 
  - Calculate average steps per user and analyze patterns across different hours of the day.
  - Identify active periods and categorize users based on activity intensity.
  - Create leaderboards by sorting users based on their total steps.

- **Table Operations**:
  - Implement functions for sorting, joining, filtering, projections, and both vertical and horizontal unions of tables.

## Tasks Implemented

- **Average Steps Calculation**: 
  - Compute the average number of steps per day from the `eight_hours` table.

- **Goal Achievement Analysis**: 
  - Check how many users met their daily step goals and calculate the percentage of users who achieved their goals.

- **Active Period Analysis**: 
  - Identify the most active hours and categorize active minutes into ranges using the `physical_activity` table.

- **Leaderboards**: 
  - Sort users by their total steps and display rankings in ascending order.

- **Table Utilities**: 
  - Implement utility functions like `vmap`, `rmap`, `tsort`, and `tjoin` for advanced table manipulations.

## Technologies Used

- **Language**: Haskell
- **Data Handling**: CSV parsing and data aggregation using Haskell functions.
- **Output Formatting**: Floating-point precision handled using `printf("%.2f")`.
